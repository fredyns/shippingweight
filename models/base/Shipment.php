<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace app\models\base;

use Yii;
use yii\behaviors\BlameableBehavior;
use yii\behaviors\TimestampBehavior;

/**
 * This is the base-model class for table "shipment".
 *
 * @property integer $id
 * @property integer $shipper_id
 * @property string $job_order
 * @property string $container_number
 * @property string $payment
 * @property integer $created_by
 * @property integer $updated_by
 * @property integer $created_at
 * @property integer $updated_at
 *
 * @property \app\models\Certificate[] $certificates
 * @property \app\models\Shipper $shipper
 * @property string $aliasModel
 */
abstract class Shipment extends \yii\db\ActiveRecord
{



    /**
    * ENUM field values
    */
    const PAYMENT_SETTLED = 'settled';
    const PAYMENT_PENDING = 'pending';
    var $enum_labels = false;
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'shipment';
    }


    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            [
                'class' => BlameableBehavior::className(),
            ],
            [
                'class' => TimestampBehavior::className(),
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['shipper_id'], 'integer'],
            [['payment'], 'string'],
            [['job_order', 'container_number'], 'string', 'max' => 255],
            [['shipper_id'], 'exist', 'skipOnError' => true, 'targetClass' => Shipper::className(), 'targetAttribute' => ['shipper_id' => 'id']],
            ['payment', 'in', 'range' => [
                    self::PAYMENT_SETTLED,
                    self::PAYMENT_PENDING,
                ]
            ]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'shipper_id' => 'Shipper ID',
            'job_order' => 'Job Order',
            'container_number' => 'Container Number',
            'payment' => 'Payment',
            'created_by' => 'Created By',
            'updated_by' => 'Updated By',
            'created_at' => 'Created At',
            'updated_at' => 'Updated At',
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCertificates()
    {
        return $this->hasMany(\app\models\Certificate::className(), ['shipment_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getShipper()
    {
        return $this->hasOne(\app\models\Shipper::className(), ['id' => 'shipper_id']);
    }




    /**
     * get column payment enum value label
     * @param string $value
     * @return string
     */
    public static function getPaymentValueLabel($value){
        $labels = self::optsPayment();
        if(isset($labels[$value])){
            return $labels[$value];
        }
        return $value;
    }

    /**
     * column payment ENUM value labels
     * @return array
     */
    public static function optsPayment()
    {
        return [
            self::PAYMENT_SETTLED => self::PAYMENT_SETTLED,
            self::PAYMENT_PENDING => self::PAYMENT_PENDING,
        ];
    }

}
