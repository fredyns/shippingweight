<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace app\models\base;

use Yii;
use yii\behaviors\BlameableBehavior;
use yii\behaviors\TimestampBehavior;

/**
 * This is the base-model class for table "payment".
 *
 * @property integer $id
 * @property integer $customer_id
 * @property string $container_list
 * @property string $note
 * @property integer $subtotal
 * @property integer $discount
 * @property integer $total
 * @property string $status
 * @property integer $paid_by
 * @property integer $cancel_by
 * @property integer $paid_at
 * @property integer $cancel_at
 * @property integer $created_by
 * @property integer $updated_by
 * @property integer $created_at
 * @property integer $updated_at
 *
 * @property \app\models\Container[] $containers
 * @property \app\models\Customer $customer
 * @property string $aliasModel
 */
abstract class Payment extends \yii\db\ActiveRecord
{



    /**
    * ENUM field values
    */
    const STATUS_BILLED = 'billed';
    const STATUS_PAID = 'paid';
    const STATUS_CANCELED = 'canceled';
    var $enum_labels = false;
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'payment';
    }


    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            [
                'class' => BlameableBehavior::className(),
            ],
            [
                'class' => TimestampBehavior::className(),
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['customer_id', 'subtotal', 'discount', 'total', 'paid_by', 'cancel_by', 'paid_at', 'cancel_at'], 'integer'],
            [['status'], 'string'],
            [['container_list', 'note'], 'string', 'max' => 255],
            [['customer_id'], 'exist', 'skipOnError' => true, 'targetClass' => Customer::className(), 'targetAttribute' => ['customer_id' => 'id']],
            ['status', 'in', 'range' => [
                    self::STATUS_BILLED,
                    self::STATUS_PAID,
                    self::STATUS_CANCELED,
                ]
            ]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'customer_id' => 'Customer ID',
            'container_list' => 'Container List',
            'note' => 'Note',
            'subtotal' => 'Subtotal',
            'discount' => 'Discount',
            'total' => 'Total',
            'status' => 'Status',
            'created_by' => 'Created By',
            'updated_by' => 'Updated By',
            'paid_by' => 'Paid By',
            'cancel_by' => 'Cancel By',
            'created_at' => 'Created At',
            'updated_at' => 'Updated At',
            'paid_at' => 'Paid At',
            'cancel_at' => 'Cancel At',
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getContainers()
    {
        return $this->hasMany(\app\models\Container::className(), ['payment_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCustomer()
    {
        return $this->hasOne(\app\models\Customer::className(), ['id' => 'customer_id']);
    }




    /**
     * get column status enum value label
     * @param string $value
     * @return string
     */
    public static function getStatusValueLabel($value){
        $labels = self::optsStatus();
        if(isset($labels[$value])){
            return $labels[$value];
        }
        return $value;
    }

    /**
     * column status ENUM value labels
     * @return array
     */
    public static function optsStatus()
    {
        return [
            self::STATUS_BILLED => self::STATUS_BILLED,
            self::STATUS_PAID => self::STATUS_PAID,
            self::STATUS_CANCELED => self::STATUS_CANCELED,
        ];
    }

}
